name: Pylint

on: 
  # push:
  # pull_request:
  workflow_dispatch:
    

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [
          "3.8",
          "3.9",
          "3.10",
          "3.11.0-rc.2"
        ]
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
    - name: Install dependencies and analyze the code
      if: matrix.python-version != '3.11.0-rc.2' 
      run: |
        python -m pip install pipenv pylint

        cd ./envs/${{ matrix.python-version }}
        pipenv install
        pipenv run cd ../../vanilla-installer && pylint . --rcfile pylint.toml
    # This is temporary until 3.11 is fully released and can be referenced by `3.11`.
    - name: Install dependencies and analyze the code (3.11)
      if: matrix.python-version == '3.11.0-rc.2'
      run: |
        echo "Using 3.11 workaround."
        python -m pip install pipenv pylint

        cd ./envs/${{ matrix.python-version }}
        pipenv install
        pipenv run cd ../../vanilla-installer && pylint . --rcfile pylint.toml
